---
import Badge from './Badge.astro';

export interface Props {
  title: string;
  author: string[];
  language: string[];
  year?: number;
  genre?: string[];
  description: string;
  href: string;
  class?: string;
}

const {
  title,
  author,
  language,
  year,
  genre,
  description,
  href,
  class: className = ''
} = Astro.props;

// Truncate description to ~160 characters
const truncatedDescription = description.length > 160
  ? description.slice(0, 160) + '...'
  : description;
---

<article class={`group h-full ${className}`}>
  <a
    href={href}
    class="flex flex-col h-full p-6 md:p-8 border border-line hover:border-accent transition-colors"
  >
    <div class="flex items-start justify-between gap-6 mb-4">
      <h3 class="font-serif text-[1.35rem] md:text-[1.5rem] font-light leading-[1.25] tracking-[0.005em] text-ink group-hover:text-accent transition-colors">
        {title}
      </h3>
      {year && (
        <span class="text-[0.85rem] text-accent font-medium shrink-0 mt-1">{year}</span>
      )}
    </div>

    <div class="text-[0.9rem] text-ink-medium mb-4">
      {author.join(', ')}
    </div>

    <p class="font-serif-body text-[0.9rem] leading-[1.65] text-ink-light font-normal line-clamp-3 mb-5 flex-grow">
      {truncatedDescription}
    </p>

    <div class="flex flex-wrap gap-x-3 gap-y-2 mt-auto text-[0.8rem] text-ink-lighter">
      {language.map((lang) => (
        <span>{lang}</span>
      ))}
      {genre && genre.length > 0 && (
        <>
          <span>Â·</span>
          <span>{genre[0]}</span>
        </>
      )}
    </div>
  </a>
</article>
